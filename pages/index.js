import Head from "next/head";
import validator from "validator";
import { useState } from "react";
import { RiLinksFill } from "react-icons/ri";
import Data from "@/components/Data";

export default function Home() {
  const [val, getVal] = useState("");
  const [message, setMessage] = useState("");
  const [errorMessage, setErrorMessage] = useState();
  const [data, setData] = useState([]);
  const [short, setShort] = useState({});
 

  function generateShortUrl(url) {
  const possible = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  let shortUrl = "";
  for (let i = 0; i < 5; i++) {
    shortUrl += possible.charAt(Math.floor(Math.random() * possible.length));
  }
  if (!short[shortUrl]===url){
      short[shortUrl]=url;
  }
  getVal(shortUrl)
  setShort({...short, [shortUrl]:url}) ;
}
   



  const handleChange = (e) => {
    setMessage(e.target.value);
  };
 
  const onChangeHandler = (event) => {
    event.preventDefault();
    if (validator.isURL(message)) {
      generateShortUrl(message);
      setData([...data, message]);
      setMessage("");
      setErrorMessage(true);
    } else {
      setErrorMessage(false);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="bg-gradient-to-tl from-cyan-500 to bg-purple-700 h-screen">
        <div className="flex flex-col justify-center place-items-center content-center w-full h-full">
          <div>
            <h2 className="flex text-4xl font-bold text-slate-100 p-5">
              URL SHORTNER {<RiLinksFill className="ml-2" />}
            </h2>
          </div>
          <div>
            <div action="post">
              <input
                onChange={handleChange}
                type="text"
                value={message}
                name="textinput"
                placeholder="Enter a valid URL"
                className=" shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline"
              />
              <button
                onClick={onChangeHandler}
                className="bg-slate-900 text-white font-bold py-2 px-4 ml-3 rounded focus:outline-none focus:shadow-outline"
              >
                SHORT
              </button>
            </div>
            {errorMessage ? <Data Val={val} {...short} /> : <h3></h3>}
          </div>
        </div>
      </main>
    </>
  );
}
